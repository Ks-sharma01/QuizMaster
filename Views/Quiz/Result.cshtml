@model QuizViewModel


<div class="results-container">
    <h2 class="text-center mb-4">Quiz Results</h2>

    <div class="score-card alert alert-success text-center">
        <h3>Your Score: @Model.Score/@Model.Questions.Count</h3>
    </div>
    <div class="results-details mt-5">
        @foreach (var question in Model.Questions)
        {
            <div class="card mb-3">
                <div class="card-header bg-light">
                    <h5>@question.Text</h5>
                </div>
                <div class="card-body">
                    @{
                        var userAnswerId = Model.UserAnswers.ContainsKey(question.QuestionId)
                        ? Model.UserAnswers[question.QuestionId]
                        : 0;

                        var userAnswer = question.Answers.FirstOrDefault(a => a.AnswerId == userAnswerId);
                        var correctAnswer = question.Answers.First(a => a.IsCorrect);
                    }

                    <p class="@(userAnswerId == correctAnswer.AnswerId ? "text-success" : "text-danger")">
                        Your Answer: @(userAnswer?.Text ?? "No answer selected")
                    </p>
                    <p class="text-success">
                        Correct Answer: @correctAnswer.Text
                    </p>
                </div>
            </div>
        }
    </div>
</div>
@* <p>You scored: @Model.Score out of (@Model.Questions.Count)</p> *@
    

<a asp-action="Index">Try Again</a>

